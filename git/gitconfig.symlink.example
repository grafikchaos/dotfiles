[user]
    name = AUTHORNAME
    email = AUTHOREMAIL
[credential]
    helper = GIT_CREDENTIAL_HELPER
[hub]
    protocol = https
[alias]
    co = checkout
    st = status
    br = branch
    ci = commit
    w  = whatchanged
    diff = diff = diff --word-diff
    df = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
    go = checkout -B
    # log related
    l  = log --pretty=oneline -n 20 --graph --abbrev-commit
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    fl = log -u

    # show modified files in last commit
    dl  = "!git ll -1"
    # show a diff of last commit
    dlc = diff --cached HEAD^
    # show diff of a revision
    dr  = "!f() { git diff "$1"^.."$1"; }; f"

    # output all aliases in case you forget
    la = "!git config -l | grep alias | cut -c 7-"

    # assume/unassume something has changed
    assume   = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    # show assumed files
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    # assume all
    assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
    # unassume all
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"

    # last tag
    lasttag = describe --tags --abbrev=0
    lt = describe --tags --abbrev=0

    # stash
    sl = stash list
    sa = stash apply
    ss = stash save

    filelog = log -u
    unstage = reset HEAD
    show-graph = log --graph --abbrev-commit --pretty=oneline
    count = !git shortlog -sn

    # merge GitHub pull request on top of the `master` branch
    mpr = "!f() { \
        if [ $(printf \"%s\" \"$1\" | grep '^[0-9]\\+$' > /dev/null; printf $?) -eq 0 ]; then \
            git fetch origin refs/pull/$1/head:pr/$1 && \
            git rebase master pr/$1 && \
            git checkout master && \
            git merge pr/$1 && \
            git branch -D pr/$1 && \
            git commit --amend -m \"$(git log -1 --pretty=%B)\n\nCloses #$1.\"; \
        fi \
    }; f"
[color]
    ui = auto
    diff = auto
    status = auto
    branch = auto
    interactive = auto
[core]
    editor = vim
    excludesfile = ~/.cvsignore
    pager = less -FRSX
    whitespace = space-before-tab,indent-with-non-tab,trailing-space
[apply]
    whitespace = nowarn
[format]
    pretty = %C(yellow)%h%Creset %s %C(red)(%cr)%Creset
[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true
[mergetool]
    keepBackup = false
[diff]
    renames = copies
    mnemonicprefix = true
[push]
    # See `git help config` (search for push.default)
    # for more information on different options of the below setting.
    #
    # Setting to git 2.0 default to surpress warning message
    default = simple
